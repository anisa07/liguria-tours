---
interface CarouselSlide {
  id: string;
  image: string;
  alt: string;
  icon: string;
  title: string;
  description: string;
}

interface Props {
  id: string;
  slides: CarouselSlide[];
}

const { id, slides } = Astro.props;
const prevId = `${id}-prev`;
const nextId = `${id}-next`;
const carouselId = `${id}-carousel`;
---

<div class="relative">
  <!-- Navigation Buttons -->
  <>
    <button
      id={prevId}
      class="absolute left-0 top-1/2 -translate-y-1/2 z-10 w-10 h-10 bg-liguria-mint/80 hover:bg-liguria-mint rounded-full flex items-center justify-center shadow-lg backdrop-blur-sm transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed"
    >
      <svg width="20" height="20" fill="currentColor" viewBox="0 0 24 24">
        <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"></path>
      </svg>
    </button>
    <button
      id={nextId}
      class="absolute right-0 top-1/2 -translate-y-1/2 z-10 w-10 h-10 bg-liguria-mint/80 hover:bg-liguria-mint rounded-full flex items-center justify-center shadow-lg backdrop-blur-sm transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed"
    >
      <svg width="20" height="20" fill="currentColor" viewBox="0 0 24 24">
        <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"></path>
      </svg>
    </button>
  </>

  <div
    id={carouselId}
    class="flex gap-4 overflow-x-auto pb-4 snap-x snap-mandatory scrollbar-hide"
    style="scroll-behavior: smooth;"
  >
    {
      slides.map((slide) => (
        <div class="min-w-80 snap-start">
          <div class="bg-background/90 backdrop-blur-sm rounded-2xl overflow-hidden border border-border hover:shadow-xl transition-all duration-300 h-80 flex flex-col">
            <div class="h-48 overflow-hidden flex-shrink-0">
              <img
                src={slide.image}
                alt={slide.alt}
                class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
              />
            </div>
            <div class="p-4 flex-1 flex flex-col">
              <h4 class="font-bold text-lg mb-2 flex items-center gap-2">
                <span>{slide.title}</span>
              </h4>
              <p class="text-muted-foreground text-sm flex-1">
                {slide.description}
              </p>
            </div>
          </div>
        </div>
      ))
    }
  </div>
</div>

<script define:vars={{ carouselId, prevId, nextId }}>
  document.addEventListener("DOMContentLoaded", function () {
    // Carousel navigation functionality
    function initCarouselNavigation(carouselId, prevBtnId, nextBtnId) {
      const carousel = document.getElementById(carouselId);
      const prevBtn = document.getElementById(prevBtnId);
      const nextBtn = document.getElementById(nextBtnId);

      if (!carousel || !prevBtn || !nextBtn) return;

      const cardWidth = 336; // card width (320px) + gap (16px)

      prevBtn.addEventListener("click", () => {
        carousel.scrollBy({
          left: -cardWidth,
          behavior: "smooth",
        });
      });

      nextBtn.addEventListener("click", () => {
        carousel.scrollBy({
          left: cardWidth,
          behavior: "smooth",
        });
      });

      // Update button visibility based on scroll position
      function updateButtonStates() {
        const maxScroll = carousel.scrollWidth - carousel.clientWidth;
        const currentScroll = carousel.scrollLeft;

        prevBtn.style.opacity = currentScroll <= 0 ? "0.5" : "1";
        nextBtn.style.opacity = currentScroll >= maxScroll - 1 ? "0.5" : "1";

        prevBtn.style.pointerEvents = currentScroll <= 0 ? "none" : "auto";
        nextBtn.style.pointerEvents =
          currentScroll >= maxScroll - 1 ? "none" : "auto";
      }

      carousel.addEventListener("scroll", updateButtonStates);
      window.addEventListener("resize", updateButtonStates);
      updateButtonStates(); // Initial state
    }

    // Initialize this carousel instance
    initCarouselNavigation(carouselId, prevId, nextId);
  });
</script>

<style>
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
</style>
