---
import TourCard from "./TourCard.astro";
import Container from "../layout/Container.astro";
import { getPageTranslations } from "@/i18n/i18n";
import type { Locale } from "@/i18n/config";
import type { CollectionEntry } from "astro:content";

export interface Props {
  locale: Locale;
  italianToursGalleryData?: CollectionEntry<"italianToursGallery">["data"]["tours"];
}

const { locale, italianToursGalleryData } = Astro.props;

// Get the translation function for this component
const { t } = await getPageTranslations(locale, ["common", "ui", "home"]);

// Use italianToursGalleryData directly
const allTours =
  italianToursGalleryData?.map((tour: any) => ({
    id: tour.slug,
    title: tour.title,
    image: tour.images[0]?.image?.src,
    price: tour.price,
    duration: tour.duration,
    href: `/tour/${tour.slug}`,
    categories: tour.categories,
    description: tour.description,
  })) || [];
---

<!-- Italian Tours Gallery -->
<section class="py-20 bg-gradient-to-b from-muted/30 to-background">
  <Container size="xl" padding="lg">
    <div class="text-center mb-16">
      <h2 class="text-4xl md:text-5xl font-bold text-primary mb-6">
        {t("tours.title", "Авторские туры по Лигурии")}
      </h2>
      <p class="text-xl text-muted-foreground">
        {
          t(
            "tours.description",
            "Откройте для себя самые красивые места Лигурии с гидом",
          )
        }
      </p>
    </div>

    <!-- Tour Filters -->
    <div class="mb-12">
      <div class="flex flex-wrap justify-center gap-4 mb-8">
        <!-- Category Filters -->
        <div class="flex flex-wrap gap-2">
          <button
            class="filter-btn px-4 py-2 rounded-full border border-primary/20 text-sm font-medium transition-all hover:bg-primary hover:text-primary-foreground active bg-primary text-primary-foreground"
            data-filter="all"
          >
            {t("filters.all", "Все туры")}
          </button>
          <button
            class="filter-btn px-4 py-2 rounded-full border border-primary/20 text-sm font-medium transition-all hover:bg-primary hover:text-primary-foreground"
            data-filter="coastal"
          >
            {t("filters.coastal", "Побережье")}
          </button>
          <button
            class="filter-btn px-4 py-2 rounded-full border border-primary/20 text-sm font-medium transition-all hover:bg-primary hover:text-primary-foreground"
            data-filter="city"
          >
            {t("filters.city", "Городские")}
          </button>
          <button
            class="filter-btn px-4 py-2 rounded-full border border-primary/20 text-sm font-medium transition-all hover:bg-primary hover:text-primary-foreground"
            data-filter="cultural"
          >
            {t("filters.cultural", "Культурные")}
          </button>
          <button
            class="filter-btn px-4 py-2 rounded-full border border-primary/20 text-sm font-medium transition-all hover:bg-primary hover:text-primary-foreground"
            data-filter="history"
          >
            {t("filters.history", "Исторические")}
          </button>
        </div>
      </div>
    </div>

    <div
      class="grid md:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 gap-6"
      id="tours-grid"
    >
      {
        allTours.map((tour: any) => (
          <div
            class="tour-item h-full"
            data-categories={JSON.stringify(tour.categories)}
          >
            <TourCard
              tour={{
                ...tour,
                price: tour.price || "По запросу",
                duration: tour.duration || "По запросу",
              }}
            />
          </div>
        ))
      }
    </div>
  </Container>
</section>

<script>
  // Tour Filter Functionality
  document.addEventListener("DOMContentLoaded", function () {
    const filterButtons = document.querySelectorAll(".filter-btn");
    const tourItems = document.querySelectorAll(".tour-item");

    // Filter functionality
    function applyFilter() {
      filterButtons.forEach((button) => {
        button.addEventListener("click", function (this: HTMLElement) {
          const filter = this.getAttribute("data-filter");
          const currentActive = document.querySelector(".filter-btn.active");

          // Don't process if same button is clicked
          if (currentActive === this) return;

          // Update active button
          filterButtons.forEach((btn) =>
            btn.classList.remove(
              "active",
              "bg-primary",
              "text-primary-foreground",
            ),
          );
          this.classList.add("active", "bg-primary", "text-primary-foreground");

          // Filter and show/hide items
          tourItems.forEach((item) => {
            const htmlItem = item as HTMLElement;
            const categoriesStr = item.getAttribute("data-categories");
            const categories = categoriesStr ? JSON.parse(categoriesStr) : [];

            let shouldShow = false;

            if (filter === "all") {
              shouldShow = true;
            } else if (
              filter === "coastal" ||
              filter === "city" ||
              filter === "cultural" ||
              filter === "history"
            ) {
              shouldShow = categories.includes(filter);
            }

            // Show items that match the filter
            if (shouldShow) {
              htmlItem.style.display = "block";
            } else {
              htmlItem.style.display = "none";
            }
          });
        });
      });
    }

    // Initialize filter functionality
    applyFilter();
  });
</script>

<style>
  .filter-btn {
    transition: all 0.2s ease;
  }
  .filter-btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  .filter-btn.active {
    transform: none !important;
  }

  .tour-item {
    display: flex;
    height: 100%;
  }
</style>
