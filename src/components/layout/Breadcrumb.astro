---
export interface BreadcrumbItem {
  label: string;
  href?: string;
  icon?: string;
}

export interface Props {
  items: BreadcrumbItem[];
  separator?: string;
  class?: string;
  homeIcon?: string;
  showHome?: boolean;
}

const {
  items,
  separator = "/",
  class: className = "",
  homeIcon = "üè†",
  showHome = true,
} = Astro.props;

// Add home item if showHome is true and not already present
const breadcrumbItems =
  showHome && items[0]?.href !== "/"
    ? [{ label: homeIcon, href: "/" }, ...items]
    : items;
---

<nav
  class={`flex items-center space-x-2 text-sm ${className}`}
  aria-label="Breadcrumb"
>
  <ol class="flex items-center space-x-2">
    {
      breadcrumbItems.map((item, index) => {
        const isLast = index === breadcrumbItems.length - 1;
        return (
          <li class="flex items-center">
            {index > 0 && (
              <span class="mx-2 text-muted-foreground" aria-hidden="true">
                {separator}
              </span>
            )}
            {item.href ? (
              <a
                href={item.href}
                class="text-muted-foreground hover:text-foreground transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 rounded-sm px-1 py-0.5"
                aria-current={isLast ? "page" : undefined}
              >
                {item.icon && (
                  <span class="mr-1" aria-hidden="true">
                    {item.icon}
                  </span>
                )}
                {item.label}
              </a>
            ) : (
              <span
                class="text-foreground font-medium"
                aria-current={isLast ? "page" : undefined}
              >
                {item.icon && (
                  <span class="mr-1" aria-hidden="true">
                    {item.icon}
                  </span>
                )}
                {item.label}
              </span>
            )}
          </li>
        );
      })
    }
  </ol>
</nav>

<style>
  /* Ensure proper spacing and alignment */
  nav ol {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    nav {
      font-size: 0.875rem;
    }

    /* Hide intermediate items on very small screens if there are many */
    nav ol li:not(:first-child):not(:last-child):not(:nth-last-child(2)) {
      display: none;
    }

    /* Show ellipsis when items are hidden */
    nav ol li:nth-child(2):not(:nth-last-child(2))::after {
      content: "...";
      margin: 0 0.5rem;
      color: rgb(var(--color-muted-foreground));
    }
  }
</style>
